{"ast":null,"code":"var _jsxFileName = \"/Users/sonu628/Documents/sood/LocusNine/locusnine_frontend/src/components/EditUser.js\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport React, { useEffect, useState } from \"react\";\nexport default function (props) {\n  const [open, setOpen] = useState(props.isOpen);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(null);\n  const [role, setRole] = useState(\"\");\n  useEffect(() => {\n    console.log(\"id is \", props.id);\n    const url = URL.users + \"\" + props.id;\n    console.log(\"url is \", url);\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(responseJson => {\n      setName(responseJson.name);\n      setEmail(responseJson.email_id);\n      setPhone(responseJson.mobile_no);\n      setRole(responseJson.role_type);\n    }).catch(error => console.log(error));\n  }, [props.id]);\n  useEffect(() => {\n    setOpen(props.isOpen);\n  }, [props.isOpen]);\n\n  const onSubmit = () => {\n    let data = {\n      name: name,\n      email_id: email,\n      mobile_no: phone,\n      role_type: role\n    };\n    const url = URL.users;\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      if (response.state === 201) {\n        return response.json();\n      }\n\n      return response.error;\n    }).then(responseJson => {\n      console.log(responseJson);\n    }).catch(error => console.log(error));\n  };\n\n  return React.createElement(Dialog, {\n    open: open,\n    onClose: () => setOpen(false),\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Add New User\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    value: name,\n    label: \"Full Name*\",\n    type: \"text\",\n    fullWidth: true,\n    onChange: event => setName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"email\",\n    label: \"Email ID*\",\n    type: \"email\",\n    fullWidth: true,\n    onChange: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(FormLabel, {\n    style: {\n      justifyContent: \"center\",\n      padding: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Role Type*\"), React.createElement(RadioGroup, {\n    disabled: true,\n    \"aria-label\": \"Roll Type\",\n    name: \"type\",\n    style: {\n      padding: '8px 24px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"Admin\",\n    control: React.createElement(Radio, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }),\n    label: \"Admin\",\n    onClick: () => setRole('Admin'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"Customer Executive\",\n    control: React.createElement(Radio, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }),\n    label: \"Customer Executive\",\n    onClick: () => setRole('Customer Executive'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"phone\",\n    label: \"Phone number\",\n    type: \"text\",\n    fullWidth: true,\n    onChange: event => setPhone(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setOpen(false),\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: onSubmit,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Update\")));\n}","map":{"version":3,"sources":["/Users/sonu628/Documents/sood/LocusNine/locusnine_frontend/src/components/EditUser.js"],"names":["DialogTitle","DialogContent","TextField","FormLabel","RadioGroup","FormControlLabel","Radio","DialogActions","Button","Dialog","React","useEffect","useState","props","open","setOpen","isOpen","name","setName","email","setEmail","phone","setPhone","role","setRole","console","log","id","url","URL","users","fetch","method","headers","then","response","json","responseJson","email_id","mobile_no","role_type","catch","error","onSubmit","data","body","JSON","stringify","state","event","target","value","justifyContent","padding"],"mappings":"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","sourcesContent":["import DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport React, {useEffect, useState} from \"react\";\n\nexport default function(props){\n    const [open,setOpen] = useState(props.isOpen);\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phone, setPhone] = useState(null);\n    const [role, setRole] = useState(\"\");\n\n    useEffect(()=>{\n        console.log(\"id is \",props.id);\n        const url = URL.users + \"\" +(props.id);\n        console.log(\"url is \", url);\n        fetch(url,{\n            method : 'GET',\n            headers : {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n            .then(response => response.json())\n            .then(responseJson => {\n                setName(responseJson.name);\n                setEmail(responseJson.email_id);\n                setPhone(responseJson.mobile_no);\n                setRole(responseJson.role_type);\n            })\n            .catch(error => console.log(error));\n    }, [props.id]);\n\n    useEffect(()=>{\n        setOpen(props.isOpen);\n    }, [props.isOpen]);\n\n    const onSubmit = () => {\n        let data = {\n            name: name,\n            email_id: email,\n            mobile_no: phone,\n            role_type: role\n        };\n\n        const url = URL.users;\n        fetch(url,{\n            method : 'POST',\n            body : JSON.stringify(data),\n            headers : {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            if(response.state === 201){\n                return response.json();\n            }\n            return response.error;\n        }).then(responseJson => {\n            console.log(responseJson);\n        }).catch(error => console.log(error));\n    }\n    return (\n        <Dialog open={open} onClose = {() => setOpen(false)} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Add New User</DialogTitle>\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    value={name}\n                    label=\"Full Name*\"\n                    type=\"text\"\n                    fullWidth\n                    onChange={(event => setName(event.target.value))}\n                />\n\n            </DialogContent>\n            <DialogContent>\n                <TextField\n                    margin=\"dense\"\n                    id=\"email\"\n                    label=\"Email ID*\"\n                    type=\"email\"\n                    fullWidth\n                    onChange={(event => setEmail(event.target.value))}\n                />\n            </DialogContent>\n            <FormLabel style={{justifyContent: \"center\", padding: 30}}>Role Type*</FormLabel>\n            <RadioGroup disabled aria-label=\"Roll Type\" name=\"type\" style={{\n                padding: '8px 24px'\n            }}>\n                <FormControlLabel\n                    value=\"Admin\"\n                    control={<Radio color=\"primary\"/>}\n                    label=\"Admin\"\n                    onClick={() => setRole('Admin')}\n                />\n                <FormControlLabel\n                    value=\"Customer Executive\"\n                    control={<Radio color=\"primary\"/>}\n                    label=\"Customer Executive\"\n                    onClick={() => setRole('Customer Executive')}\n                />\n            </RadioGroup>\n            <DialogContent>\n                <TextField\n                    margin=\"dense\"\n                    id=\"phone\"\n                    label=\"Phone number\"\n                    type=\"text\"\n                    fullWidth\n                    onChange={event => setPhone(event.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setOpen(false)} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={onSubmit} color=\"primary\">\n                    Update\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}"]},"metadata":{},"sourceType":"module"}