{"ast":null,"code":"var _jsxFileName = \"/home/nineleaps/Desktop/Projects/LocusNine/locusnine_frontend/src/components/EditUser.js\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport React, { useEffect, useState } from \"react\";\nimport URL from \"../API/URL\";\nexport default function (props) {\n  const [open, setOpen] = useState(props.isOpen);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(null);\n  const [role, setRole] = useState(\"\");\n  useEffect(() => {\n    console.log(\"id is \", props.id);\n    let id = props.id + \"\";\n    const url = URL.users + id;\n    console.log(\"url is \", url);\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(responseJson => {\n      setName(responseJson.name);\n      setEmail(responseJson.email_id);\n      setPhone(responseJson.mobile_no);\n      setRole(responseJson.role_type);\n    }).catch(error => console.log(error));\n  }, [props.id]);\n  useEffect(() => {\n    setOpen(props.isOpen);\n  }, [props.isOpen]);\n\n  const onSubmit = () => {\n    let data = {\n      name: name,\n      email_id: email,\n      mobile_no: phone,\n      role_type: role\n    };\n    console.log(\"data is \", data);\n    const url = URL.users + props.id + \"/\";\n    fetch(url, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      if (response.state === 201) {\n        console.log(\"not error\");\n        return response.json();\n      }\n\n      return response.error;\n    }).then(responseJson => {\n      console.log(responseJson);\n      setOpen(false);\n      props.editCountUpdate();\n      props.closeEditUserDialog();\n    }).catch(error => console.log(error));\n  };\n\n  return React.createElement(Dialog, {\n    open: open,\n    onClose: () => {\n      setOpen(false);\n      props.closeEditUserDialog();\n    },\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Add New User\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    value: name,\n    type: \"text\",\n    fullWidth: true,\n    onChange: event => setName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"email\",\n    value: email,\n    type: \"email\",\n    fullWidth: true,\n    onChange: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(FormLabel, {\n    style: {\n      justifyContent: \"center\",\n      padding: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Role Type*\"), React.createElement(RadioGroup, {\n    disabled: true,\n    \"aria-label\": \"Roll Type\",\n    name: \"type\",\n    style: {\n      padding: '8px 24px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"Admin\",\n    checked: role === \"Admin\",\n    control: React.createElement(Radio, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }),\n    label: \"Admin\",\n    onClick: () => setRole('Admin'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"Customer Executive\",\n    checked: role === \"Customer Executive\",\n    control: React.createElement(Radio, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }),\n    label: \"Customer Executive\",\n    onClick: () => setRole('Customer Executive'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"phone\",\n    value: phone,\n    type: \"text\",\n    fullWidth: true,\n    onChange: event => setPhone(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      setOpen(false);\n      props.closeEditUserDialog();\n    },\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: onSubmit,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Update\")));\n}","map":{"version":3,"sources":["/home/nineleaps/Desktop/Projects/LocusNine/locusnine_frontend/src/components/EditUser.js"],"names":["DialogTitle","DialogContent","TextField","FormLabel","RadioGroup","FormControlLabel","Radio","DialogActions","Button","Dialog","React","useEffect","useState","URL","props","open","setOpen","isOpen","name","setName","email","setEmail","phone","setPhone","role","setRole","console","log","id","url","users","fetch","method","headers","then","response","json","responseJson","email_id","mobile_no","role_type","catch","error","onSubmit","data","body","JSON","stringify","state","editCountUpdate","closeEditUserDialog","event","target","value","justifyContent","padding"],"mappings":"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","sourcesContent":["import DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport React, {useEffect, useState} from \"react\";\nimport URL from \"../API/URL\";\n\nexport default function(props){\n    const [open,setOpen] = useState(props.isOpen);\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phone, setPhone] = useState(null);\n    const [role, setRole] = useState(\"\");\n\n    useEffect(()=>{\n        console.log(\"id is \",props.id);\n        let id = props.id + \"\";\n        const url = URL.users + id;\n        console.log(\"url is \", url);\n        fetch(url,{\n            method : 'GET',\n            headers : {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n            .then(response => response.json())\n            .then(responseJson => {\n                setName(responseJson.name);\n                setEmail(responseJson.email_id);\n                setPhone(responseJson.mobile_no);\n                setRole(responseJson.role_type);\n            })\n            .catch(error => console.log(error));\n    }, [props.id]);\n\n    useEffect(()=>{\n        setOpen(props.isOpen);\n    }, [props.isOpen]);\n\n    const onSubmit = () => {\n        let data = {\n            name: name,\n            email_id: email,\n            mobile_no: phone,\n            role_type: role\n        };\n        console.log(\"data is \", data);\n        const url = URL.users + props.id + \"/\";\n        fetch(url,{\n            method : 'PUT',\n            body : JSON.stringify(data),\n            headers : {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            if(response.state === 201){\n                console.log(\"not error\");\n                return response.json();\n            }\n            return response.error;\n        }).then(responseJson => {\n            console.log(responseJson);\n            setOpen(false);\n            props.editCountUpdate();\n            props.closeEditUserDialog();\n        }).catch(error => console.log(error));\n    }\n    return (\n        <Dialog open={open} onClose = {() => {setOpen(false); props.closeEditUserDialog(); }} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Add New User</DialogTitle>\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    value={name}\n                    type=\"text\"\n                    fullWidth\n                    onChange={(event => setName(event.target.value))}\n                />\n\n            </DialogContent>\n            <DialogContent>\n                <TextField\n                    margin=\"dense\"\n                    id=\"email\"\n                    value={email}\n                    type=\"email\"\n                    fullWidth\n                    onChange={(event => setEmail(event.target.value))}\n                />\n            </DialogContent>\n            <FormLabel style={{justifyContent: \"center\", padding: 30}}>Role Type*</FormLabel>\n            <RadioGroup disabled aria-label=\"Roll Type\" name=\"type\" style={{\n                padding: '8px 24px'\n            }}>\n                <FormControlLabel\n                    value=\"Admin\"\n                    checked={role === \"Admin\"}\n                    control={<Radio color=\"primary\"/>}\n                    label=\"Admin\"\n                    onClick={() => setRole('Admin')}\n                />\n                <FormControlLabel\n                    value=\"Customer Executive\"\n                    checked={role === \"Customer Executive\"}\n                    control={<Radio color=\"primary\"/>}\n                    label=\"Customer Executive\"\n                    onClick={() => setRole('Customer Executive')}\n                />\n            </RadioGroup>\n            <DialogContent>\n                <TextField\n                    margin=\"dense\"\n                    id=\"phone\"\n                    value={phone}\n                    type=\"text\"\n                    fullWidth\n                    onChange={event => setPhone(event.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => {setOpen(false); props.closeEditUserDialog();}} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={onSubmit} color=\"primary\">\n                    Update\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}"]},"metadata":{},"sourceType":"module"}